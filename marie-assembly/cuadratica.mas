/ MARIE Assembly Program - Quadratic Equation Root Counter
/ This program determines the number of real roots for a quadratic equation: ax^2 + bx + c = 0
/ It reads coefficients a, b, and c from standard input, and outputs:
/   - 0 if there are no real roots,
/   - 1 if there is one real root,
/   - 2 if there are two real roots.

Input
Store amount    / Store the number of test cases

for, 	Load amount
        Skipcond 800 / If amount < 0, finish
        Halt

        Subt ONE
        Store amount
        Jump read       / Read the next test case

        read,	Clear
                Store AC

                Clear
                Store B2

                Clear
                Store ACF

                Input   / Read coefficient A
                Store A

                Input   / Read coefficient B
                Store B

                Load B
                Store X

                Input
                Store C

                Load B  / Handle possible negative B (needed for squaring)
                Skipcond 000
                Jump nonnegB

                Subt B
                Subt B
                Store B
                Clear
                Add ONE
                Store negflagB
                Clear
                Jump loopB

        nonnegB,Clear
                Store negflagB
                Load B
                Skipcond 400
                Jump loopB
                Jump halt

        loopB,  Load B2 / Square B and store in B2
                Add X
                Store B2

                Load B
                Subt ONE
                Store B
            
                Skipcond 400
                Jump loopB

                Load negflagB   / If B was negative, correct B2 sign
                Skipcond 800
                Jump ac_preparation

                Load B2
                Subt B2
                Subt B2
                Store B2

        ac_preparation, Load C  / Prepare to compute 4ac
                        Skipcond 000
                        Jump nonnegAC

                        Subt C
                        Subt C
                        Store C
                        Clear
                        Add ONE
                        Store negflagAC
                        Clear
                        Jump loopAC

        nonnegAC,   Clear
                    Store negflagAC
                    Load C
                    Skipcond 400
                    Jump loopAC
                    Jump variables_preparation

        loopAC, Load AC / Multiply a * c and store in AC
                Add A
                Store AC

                Load C
                Subt ONE
                Store C
            
                Skipcond 400
                Jump loopAC

        Load negflagAC
        Skipcond 800
        Jump variables_preparation

        Load AC
        Subt AC
        Subt AC
        Store AC

        variables_preparation,  Load AC
                                Store ACF       / Save a*c result

                                Load FOUR
                                Store REP       / REP = 4 for 4ac

        fourth_loop, Load REP   / Multiply a*c by 4 and store in ACF
                Subt ONE
                Store REP
                Skipcond 800
                Jump halt
                Load ACF
                Add AC
                Store ACF
                Jump fourth_loop

        halt,   Load B2 / Calculate discriminant: B^2 - 4ac
                Subt ACF
                Skipcond 400
                Jump nonzero
                Jump ONE_ROOT

        nonzero,    Skipcond 800
                    Jump ZERO_ROOT      / Discriminant < 0 → No real roots
                    Jump TWO_ROOT       / Discriminant > 0 → Two real roots

        ZERO_ROOT,  Load ZERO
                    Output
                    Jump for

        ONE_ROOT,   Load ONE
                    Output
                    Jump for

        TWO_ROOT,   Load TWO
                    Output
                    Jump for

amount,     DEC 11   / Number of test cases
A,          DEC 22   / Coefficient a
B,          DEC 33   / Coefficient b
C,          DEC 44   / Coefficient c
B2,         DEC 0    / b^2
AC,         DEC 0    / a * c
ACF,        DEC 0    / 4 * a * c
X,          DEC 0    / Copy of b for squaring
REP,        DEC 0    / Loop counter for multiplication
ZERO,       DEC 0
ONE,        DEC 1
TWO,        DEC 2
FOUR,       DEC 4
negflagB,   DEC 0    / Flag if B was negative
negflagAC,  DEC 0    / Flag if AC was negative